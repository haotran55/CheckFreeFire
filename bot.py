import os
import random
import requests
import asyncio
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackContext

TOKEN = os.getenv("BOT_TOKEN")  # L·∫•y token t·ª´ bi·∫øn m√¥i tr∆∞·ªùng

async def start(update: Update, context: CallbackContext):
    await update.message.reply_text("Ch√†o b·∫°n! T√¥i l√† bot Telegram ch·∫°y tr√™n Render.")

async def echo(update: Update, context: CallbackContext):
    await update.message.reply_text(update.message.text)

async def taixiu(update: Update, context: CallbackContext):
    dice1 = random.randint(1, 6)
    dice2 = random.randint(1, 6)
    dice3 = random.randint(1, 6)
    total = dice1 + dice2 + dice3
    result = "T√†i" if total >= 11 else "X·ªâu"
    await update.message.reply_text(f"üé≤ X√∫c x·∫Øc: {dice1} - {dice2} - {dice3}\nT·ªïng: {total} => {result}")

async def create_file(update: Update, context: CallbackContext):
    file_name = "bot_output.txt"
    with open(file_name, "w") as file:
        file.write("ƒê√¢y l√† file ƒë∆∞·ª£c t·∫°o b·ªüi bot Telegram.\n")
    await update.message.reply_document(document=open(file_name, "rb"))
    os.remove(file_name)

async def check_uid_ff(update: Update, context: ContextTypes.DEFAULT_TYPE):
    args = context.args  # L·∫•y danh s√°ch c√°c ƒë·ªëi s·ªë
    if not args:
        await update.message.reply_text("Vui l√≤ng nh·∫≠p UID Free Fire! V√≠ d·ª•: /checkuid 123456789")
        return
    uid = context.args[0]
    url = f"http://minhnguyen3004.x10.mx/checkuid?uid={uid}"  # API gi·∫£ ƒë·ªãnh, c·∫ßn thay b·∫±ng API th·∫≠t
    try:
        response = requests.get(url)
        data = response.json()
        if "error" in data:
            await update.message.reply_text("UID kh√¥ng h·ª£p l·ªá ho·∫∑c kh√¥ng t·ªìn t·∫°i.")
        else:
            await update.message.reply_text(f"Th√¥ng tin UID {uid}: {data}")
    except Exception as e:
        await update.message.reply_text("L·ªói khi ki·ªÉm tra UID. Vui l√≤ng th·ª≠ l·∫°i sau!")

async def main():
    app = Application.builder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("taixiu", taixiu))
    app.add_handler(CommandHandler("checkuid", check_uid_ff))
    app.add_handler(CommandHandler("createfile", create_file))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, echo))
    print("Bot ƒë√£ kh·ªüi ch·∫°y...")
    await app.run_polling()

if __name__ == "__main__":
    asyncio.run(main())
